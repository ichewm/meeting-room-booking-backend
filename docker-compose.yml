version: '3.8'

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: meeting-room-api
    restart: unless-stopped
    ports:
      - "${PORT:-3001}:3001"
    env_file:
      - .env
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD:-example}
      - DB_DATABASE=${DB_DATABASE:-conference_room_db}
    volumes:
      - ./:/app
      - /app/node_modules
    depends_on:
      - db
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db:
    image: mysql:8.0
    container_name: meeting-room-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-conference_room_db}
      MYSQL_USER: ${DB_USERNAME:-user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-example}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-rootexample}
    ports:
      - "${DB_HOST_PORT:-3306}:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - app-network
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --max_connections=1000
      --innodb_buffer_pool_size=256M
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - DAC_OVERRIDE
      - FOWNER
      - MKNOD
    security_opt:
      - seccomp=default

networks:
  app-network:
    driver: bridge

volumes:
  db_data:
    driver: local
