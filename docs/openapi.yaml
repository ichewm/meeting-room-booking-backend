openapi: 3.0.3
info:
  title: Meeting Room Booking System API
  description: API for managing meeting rooms, reservations, and users
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local development server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [employee, admin, superAdmin]
      required: [username, email]
    MeetingRoom:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        capacity:
          type: integer
        location:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [available, occupied, maintenance]
      required: [name, capacity, location]
    Reservation:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        roomId:
          type: integer
      required: [title, startTime, endTime, roomId]
paths:
  /auth/login:
    post:
      summary: 用户登录
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required: [username, password]
      responses:
        '200':
          description: 成功登录
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
  /users:
    get:
      summary: 获取所有用户
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 用户列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      summary: 创建用户
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: 创建成功的用户
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: 获取特定用户
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 用户信息
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    patch:
      summary: 更新用户
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: 更新后的用户
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      summary: 删除用户
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 删除成功
  /users/me/roles:
    get:
      summary: 获取当前用户角色和权限
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 角色和权限信息
          content:
            application/json:
              schema:
                type: object
                properties:
                  role:
                    type: string
                  permissions:
                    type: object
                    properties:
                      canManageAdmins:
                        type: boolean
                      canManageUsers:
                        type: boolean
  /users/{id}/role:
    patch:
      summary: 设置用户角色
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
                  enum: [employee, admin, superAdmin]
              required: [role]
      responses:
        '200':
          description: 更新后的用户
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /users/{id}/admin-role:
    delete:
      summary: 移除管理员角色
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 更新后的用户
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /meeting-rooms:
    get:
      summary: 获取所有会议室
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 会议室列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MeetingRoom'
    post:
      summary: 创建会议室
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingRoom'
      responses:
        '201':
          description: 创建成功的会议室
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRoom'
  /meeting-rooms/{id}:
    get:
      summary: 获取特定会议室
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 会议室信息
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRoom'
    patch:
      summary: 更新会议室
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingRoom'
      responses:
        '200':
          description: 更新后的会议室
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MeetingRoom'
    delete:
      summary: 删除会议室
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 删除成功
  /reservations:
    get:
      summary: 获取所有预订
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 预订列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
    post:
      summary: 创建预订
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '201':
          description: 创建成功的预订
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
  /reservations/user:
    get:
      summary: 获取当前用户预订
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 用户预订列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reservation'
  /reservations/{id}:
    get:
      summary: 获取特定预订
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: 预订信息
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
    patch:
      summary: 更新预订
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reservation'
      responses:
        '200':
          description: 更新后的预订
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Reservation'
    delete:
      summary: 删除预订
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: 删除成功